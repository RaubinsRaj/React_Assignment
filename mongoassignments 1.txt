Q1. db.movies.find().pretty();
{
        "_id" : ObjectId("5f2a36e978b5311fc2faf9a5"),
        "title" : "Fight Club",
        "writer" : "Chuck Palahniuko",
        "year" : "1999",
        "actors" : [
                "Bradd Pitt",
                "Edward Nortan"
        ]
}
{
        "_id" : ObjectId("5f2a36e978b5311fc2faf9a6"),
        "title" : "Pulp Fiction",
        "writer" : "Quetin Tarantino",
        "year" : "1994",
        "actors" : [
                "John Travolta",
                "Uma Thurman"
        ]
}
{
        "_id" : ObjectId("5f2a36e978b5311fc2faf9a7"),
        "title" : "Inglorious Basterds",
        "writer" : "Quetin Tarantino",
        "year" : "2009",
        "actors" : [
                "Bradd Pitt",
                "Diane Kruger",
                "Eli Roth"
        ]
}
{
        "_id" : ObjectId("5f2a36e978b5311fc2faf9a8"),
        "title" : "The Hobbit: An Unexpected Journey",
        "writer" : "J.R.R Tolkein",
        "year" : "2012"
}
{
        "_id" : ObjectId("5f2a36e978b5311fc2faf9a9"),
        "title" : "The Hobbit: The Desolation Smaug",
        "writer" : "J.R.R Tolkein",
        "year" : "2013"
}
{
        "_id" : ObjectId("5f2a36e978b5311fc2faf9aa"),
        "title" : "The Hobbit: The Battle Of The Five Armies",
        "writer" : "J.R.R Tolkein",
        "year" : "2012"
}
{
        "_id" : ObjectId("5f2a36e978b5311fc2faf9ab"),
        "title" : "Pee Wee Herman's Big Adventure"
}
{ "_id" : ObjectId("5f2a36e978b5311fc2faf9ac"), "title" : "Avatar" }

=====================================================================
Q2. db.movies.find({writer: "Quetin Tarantino"})
{ "_id" : ObjectId("5f2a36e978b5311fc2faf9a6"), "title" : "Pulp Fiction", "writer" : "Quetin Tarantino", "year" : "1994", "actors" : [ "John Travolta", "Uma Thurman" ] }
{ "_id" : ObjectId("5f2a36e978b5311fc2faf9a7"), "title" : "Inglorious Basterds", "writer" : "Quetin Tarantino", "year" : "2009", "actors" : [ "Bradd Pitt", "Diane Kruger", "Eli Roth" ] }
============================================================================================================
Q3. db.movies.find({actors: "Bradd Pitt"})
{ "_id" : ObjectId("5f2a36e978b5311fc2faf9a5"), "title" : "Fight Club", "writer" : "Chuck Palahniuko", "year" : "1999", "actors" : [ "Bradd Pitt", "Edward Nortan" ] }
{ "_id" : ObjectId("5f2a36e978b5311fc2faf9a7"), "title" : "Inglorious Basterds", "writer" : "Quetin Tarantino", "year" : "2009", "actors" : [ "Bradd Pitt", "Diane Kruger", "Eli Roth" ] }
=====================================================================================================================
Q4.  db.movies.find({franchise: "The Hobbit"})
no OUTPUT
===============================================================
Q5. db.movies.find({$and: [{"year": {$gt: "1900"}}, {"year": {$lt: "2000"}}]})
{ "_id" : ObjectId("5f2a36e978b5311fc2faf9a5"), "title" : "Fight Club", "writer" : "Chuck Palahniuko", "year" : "1999", "actors" : [ "Bradd Pitt", "Edward Nortan" ] }
{ "_id" : ObjectId("5f2a36e978b5311fc2faf9a6"), "title" : "Pulp Fiction", "writer" : "Quetin Tarantino", "year" : "1994", "actors" : [ "John Travolta", "Uma Thurman" ] }
================================================================
Q6. db.movies.find({$or: [{"year": {$lt: "2000"}}, {"year": {$gt: "2010"}}]})
{ "_id" : ObjectId("5f2a36e978b5311fc2faf9a5"), "title" : "Fight Club", "writer" : "Chuck Palahniuko", "year" : "1999", "actors" : [ "Bradd Pitt", "Edward Nortan" ] }
{ "_id" : ObjectId("5f2a36e978b5311fc2faf9a6"), "title" : "Pulp Fiction", "writer" : "Quetin Tarantino", "year" : "1994", "actors" : [ "John Travolta", "Uma Thurman" ] }
{ "_id" : ObjectId("5f2a36e978b5311fc2faf9a8"), "title" : "The Hobbit: An Unexpected Journey", "writer" : "J.R.R Tolkein", "year" : "2012" }
{ "_id" : ObjectId("5f2a36e978b5311fc2faf9a9"), "title" : "The Hobbit: The Desolation Smaug", "writer" : "J.R.R Tolkein", "year" : "2013" }
{ "_id" : ObjectId("5f2a36e978b5311fc2faf9aa"), "title" : "The Hobbit: The Battle Of The Five Armies", "writer" : "J.R.R Tolkein", "year" : "2012" }
================================================================================
=============================UPDATE QUERIES================

Q1. db.movies.update({"title": "The Hobbit: An Unexpected Journey"}, {"synopsis": "A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug."})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
===========================================================================
Q2. db.movies.update({"title": "The Hobbit: The Desolation of Smaug"}, {"synopsis": "The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring."})
WriteResult({ "nMatched" : 0, "nUpserted" : 0, "nModified" : 0 })
===========================================================================
Q3. db.movies.update({"title": "Pulp Fiction"}, {$push: {"actors": "Samuel L. Jackson"}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
==================================================================================
==============================TEXT SEARCH===========================

create index first : db.movies.createIndex({synopsis:"text"})
=============================================================
Q1. db.movies.find({$text: {$search: "Bilbo"}})
{ "_id" : ObjectId("5f2a36e978b5311fc2faf9a8"), "synopsis" : "A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug." }
============================================================================
Q2. db.movies.find({$text: {$search: "Gandalf"}})
NO OUTPUT
==============================================================================
Q3. db.movies.find({$text: {$search: "Bilbo -Gandalf"}})
{ "_id" : ObjectId("5f2a36e978b5311fc2faf9a8"), "synopsis" : "A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug." }
==============================================================================
Q4. db.movies.find({$text: {$search: "dwarves hobbit"}})
{ "_id" : ObjectId("5f2a36e978b5311fc2faf9a8"), "synopsis" : "A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug." }
=============================================================================
Q5. db.movies.find({$text: {$search: "gold" "dragon"}})
{ "_id" : ObjectId("5f2a36e978b5311fc2faf9a8"), "synopsis" : "A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug." }
=============================================================================
=============================DELETE=========================================

Q1.  db.movies.remove({title: "Pee Wee Herman's Big Adventure"})
WriteResult({ "nRemoved" : 1 })
=======================================================================
Q2. db.movies.remove({title: "Avatar"})
WriteResult({ "nRemoved" : 1 })
===========================================================================
===========================================================================
=====================================USERS COLLECTION======================

Q1. db.users.find({}).pretty()
Q2. db.posts.find({}).pretty()
Q3. db.posts.find({username: "GoodGuyGreg"}).pretty()
Q4. db.posts.find({username: "ScumbagSteve"}).pretty()
Q5. db.comments.find({}).pretty()
Q6. db.comments.find({username: "GoodGuyGreg"}).pretty()
Q7. db.comments.find({username: "ScumbagSteve"}).pretty()
Q8. db.comments.find({post: db.posts.findOne({title: "Reports a bug in your code"})._id})
===========================================================================

